<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <title>초등 1학년 뺄셈 문제 - 10 미만</title>
  <style>
    @page {
      size: A4;
      margin: 2.5cm;
    }
    body {
      font-family: 'Arial', sans-serif;
      font-size: 24px;
      margin: 0;
      padding: 0;
      text-align: center;
    }
    h1 {
      text-align: center;
      margin: 20px 0 10px;
    }
    p.instruction {
      text-align: center;
      font-size: 24px;
      margin-bottom: 30px;
    }
    form {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 10px;
      padding: 0 20px;
    }
    .problem {
      box-sizing: border-box;
      padding: 10px;
      text-align: left;
      font-size: 30px;
    }
    .problem .label {
      font-size: 20px;
      margin-bottom: 5px;
    }
    .problem .question {
      padding-left: 1cm;
      font-size: 30px;
    }
    .problem input[type="number"] {
      width: 60px;
      font-size: 30px;
      padding: 4px;
      background-color: lightgreen;
      transition: background-color 0.3s;
    }
    .problem input.filled {
      background-color: transparent;
    }
    .submit-container,
    .retry-container {
      width: 100%;
      text-align: center;
      margin-top: 20px;
    }
    #score-display {
      font-size: 24px;
      font-weight: bold;
      margin-bottom: 20px;
    }
    button {
      font-size: 24px;
      padding: 8px 16px;
      margin: 5px;
    }
    .heart-container {
      position: relative;
      display: inline-block;
      width: 200px;
      height: 180px;
      background-color: red;
      clip-path: polygon(50% 0%, 0% 35%, 50% 100%, 100% 35%);
      margin-top: 20px;
    }
    .speech-bubble {
      position: absolute;
      top: -20px;
      left: 50%;
      transform: translateX(-50%);
      padding: 10px;
      background-color: #fff;
      border-radius: 10px;
      border: 2px solid #000;
      width: 160px;
      text-align: center;
    }
    .speech-bubble::after {
      content: '';
      position: absolute;
      top: 100%;
      left: 50%;
      transform: translateX(-50%);
      border-width: 10px;
      border-style: solid;
      border-color: #fff transparent transparent transparent;
    }
  </style>
</head>
<body>

  <h1>초등 1학년 뺄셈 문제</h1>
  <p class="instruction">10보다 작은 수들로 뺄셈을 하세요.</p>

  <div id="score-display"></div>

  <form id="quizForm" onsubmit="gradeQuiz(event)">
    <div class="submit-container">
      <button type="submit">채점하기</button>
    </div>
  </form>

  <div class="retry-container" style="display: none;">
    <button onclick="retrySameProblems()">다시 풀기</button>
    <button onclick="generateNewProblems()">새로운 문제 풀기</button>
  </div>

  <div id="heartMessageContainer" style="display: none;">
    <div class="heart-container">
      <div id="speechBubble" class="speech-bubble"></div>
    </div>
  </div>

  <script>
    let problems = [];

    function generateRandomProblems(count = 20) {
      const list = [];
      while (list.length < count) {
        const b = Math.floor(Math.random() * 7) + 2; // 2~8
        const a = Math.floor(Math.random() * (9 - b + 1)) + b; // a는 b보다 크거나 같고, 최대 9
        const result = a - b;
        if (result >= 1 && result <= 9) {
          list.push([a, b]);
        }
      }
      return list;
    }

    function renderProblems(problemSet, feedback = []) {
      const form = document.getElementById('quizForm');
      const submitContainer = form.querySelector('.submit-container');
      [...form.querySelectorAll('.problem')].forEach(el => el.remove());
      document.querySelector('.retry-container').style.display = 'none';
      document.getElementById('heartMessageContainer').style.display = 'none';
      document.getElementById('score-display').innerText = '';

      problemSet.forEach((p, i) => {
        const div = document.createElement('div');
        div.className = 'problem';
        const answer = feedback[i] !== undefined ? `<span style='color:${feedback[i] ? "green" : "red"}; font-size:30px;'>(${feedback[i] ? p[0] - p[1] : "?"})</span>` : '';
        div.innerHTML = `
          <div class="label">(문제 ${i + 1})</div>
          <div class="question">${p[0]} - ${p[1]} = <input type="number" id="q${i}" name="q${i}" required> ${answer}</div>
        `;
        form.insertBefore(div, submitContainer);
      });

      problemSet.forEach((_, i) => {
        const input = document.getElementById(`q${i}`);
        input.addEventListener("input", function () {
          input.classList.toggle("filled", input.value !== "");
        });
        input.addEventListener("keydown", function (e) {
          if (e.key === "Enter") {
            e.preventDefault();
            const next = document.getElementById(`q${i + 1}`);
            if (next) next.focus();
            else document.querySelector('button[type="submit"]').focus();
          }
        });
      });
    }

    function gradeQuiz(event) {
      event.preventDefault();
      let correct = 0;
      let feedback = [];

      problems.forEach((p, i) => {
        const answer = p[0] - p[1];
        const userAnswer = parseInt(document.getElementById(`q${i}`).value, 10);
        const isCorrect = userAnswer === answer;
        if (isCorrect) correct++;
        feedback.push(isCorrect);
      });

      document.getElementById('score-display').innerText = `총 ${problems.length}문제 중 ${correct}개 정답!`;

      const heartMessageContainer = document.getElementById('heartMessageContainer');
      const speechBubble = document.getElementById('speechBubble');

      if (correct / problems.length >= 0.9) {
        heartMessageContainer.style.display = 'block';
        speechBubble.innerHTML = '훌륭해요!';
      } else if (correct / problems.length <= 0.6) {
        heartMessageContainer.style.display = 'block';
        speechBubble.innerHTML = '노력하요';
      }

      renderProblems(problems, feedback);
      document.querySelector('.retry-container').style.display = 'block';
    }

    function retrySameProblems() {
      renderProblems(problems);
    }

    function generateNewProblems() {
      problems = generateRandomProblems();
      renderProblems(problems);
    }

    problems = generateRandomProblems();
    renderProblems(problems);
  </script>
<a href="index.html">홈으로 돌아가기</a>
</body>
</html>
